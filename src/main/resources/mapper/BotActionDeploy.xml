<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="BotActionDeploy">

	<select id="select" resultType="BotActionDeploy">
		/* BotActionDeploy.select */
		select *
		from shfda.tb_bot_action_deploy
		<where>
			<if test="blockId != null">
			and block_id = #{blockId}
			</if>
			<if test="balloonNum != null">
			and balloon_num = #{balloonNum}
			</if>
			<if test="childBlockId != null">
			and child_block_id = #{childBlockId}
			</if>
			<if test="data != null">
			and data = #{data}
			</if>
			<if test="deviceType != null">
			and device_type = #{deviceType}
			</if>
			<if test="extra != null">
			and extra = #{extra}
			</if>
			<if test="keyword != null">
			and keyword = #{keyword}
			</if>
			<if test="name != null">
			and name = #{name}
			</if>
			<if test="num != null">
			and num = #{num}
			</if>
			<if test="scenarioId != null">
			and scenario_id = #{scenarioId}
			</if>
			<if test="type != null">
			and type = #{type}
			</if>
		</where>

		<if test="orderby != null">
		order by ${orderby}
		</if>
	</select>
	
	<insert id="insert">
		/* BotActionDeploy.insert */
		insert into shfda.tb_bot_action_deploy
		(
			 id
			, balloon_num 	
			, block_id	 	
			, child_block_id 
			, data 			
			, deployed 		
			, deployer 		
			, device_type 	
			, extra			
			, keyword 		
			, modified 		
			, modifier 		
			, name 			
			, num 			
			, scenario_id 	
			, sort
			, type 			
		)
		values
		(
			  #{id}
			, #{balloonNum}           
			, #{blockId}              
			, #{childBlockId}         
			, #{data}              
			, sysdate           
			, 1             
			, #{deviceType}           
			, #{extra}                
			, #{keyword}              
			, sysdate           
			, 1        
			, #{name}                 
			, #{num}                  
			, #{scenarioId}   
			, #{sort}			        
			, #{type}                 
		)
	</insert>

	<update id="save">
		/* BotActionDeploy.save */
		merge into shfda.tb_bot_action_deploy
		using dual
		on (id = #{id})
		
		when not matched then
		insert
		(
			 id
			, balloon_num 	
			, block_id	 	
			, child_block_id 
			, data 			
			, deployed 		
			, deployer 		
			, device_type 	
			, extra			
			, keyword 		
			, modified 		
			, modifier 		
			, name 			
			, num 			
			, scenario_id 	
			, sort
			, type 			
		)
		values
		(
			 #{id}
			, #{balloonNum}           
			, #{blockId}              
			, #{childBlockId}         
			, #{data}              
			, sysdate           
			, 1             
			, #{deviceType}           
			, #{extra}                
			, #{keyword}              
			, sysdate           
			, 1        
			, #{name}                 
			, #{num}                  
			, #{scenarioId}   
			, #{sort}			        
			, #{type}                 
		)

		when matched then
		update
		set
			balloon_num 	= #{balloonNum},     
			block_id	 	= #{blockId},        
			child_block_id  = #{childBlockId},  
			data 			= #{data},           
			deployed 		= sysdate,       
			deployer 		= 1,       
			device_type 	= #{deviceType},     
			extra			= #{extra},          
			keyword 		= #{keyword},       
			modified 		= sysdate,           
			modifier 		= 1,       
			name 			= #{name},           
			num 			= #{num},            
			scenario_id 	= #{scenarioId},     
			sort            = #{sort},           
			type 			= #{type}
		where
			id = #{id}
	</update>

	<update id="delete">
		/* BotActionDeploy.delete */
		delete from shfda.tb_bot_action_deploy
		where
			<if test="id != null">
			id = #{id}
			</if>
	</update>
</mapper>
