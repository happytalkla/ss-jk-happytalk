<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="common">

	<!-- 코드 목록 조회 -->
	<select id="selectCommonCodeList" resultType="CMap">
		/* common.selectCommonCodeList */
		select cd, cd_nm, sim_nm
		from shfda.tb_cd
		where cd_group = #{cdGroup}
		  and use_yn = 'Y'
		order by seq
	</select>

	<!-- 현재 DB 시스템 시간 조회 -->
	<select id="selectSysdate" resultType="java.sql.Timestamp">
		/* common.selectSysdate */
		select sysdate
		from dual
	</select>

	<!-- 현재 년,월,일 조회 -->
	<select id="selectNowDate" resultType="CMap">
		/* common.selectNowDate */
		select to_char(sysdate, 'YYYY') as now_year,
			   to_char(sysdate, 'MM')   as now_month,
			   to_char(sysdate, 'DD')   as now_day
		from dual
	</select>

	<!-- 특정 년, 월, 일 조회 -->
	<select id="selectCustomDate" resultType="CMap">
		/* common.selectCustomDate */
		select
		<if test="schDateType != null and schDateType eq 'MONTH'.toString() ">
			to_char(add_months(sysdate, #{schAdd}), 'yyyy-mm') as sel_day
		</if>
		<if test="schDateType != null and schDateType eq 'DAY'.toString() ">
			<choose>
				<when test="schDayType != null and schDayType == 'first'.toString()">
					to_char(trunc(sysdate, 'month'), 'yyyy-mm-dd') as sel_day
				</when>
				<when test="schDayType != null and schDayType == 'last'.toString()">
					to_char(trunc(add_months(sysdate, 1), 'month')-1, 'yyyy-mm-dd') as sel_day
				</when>
				<when test="startDate != null and endDate != null">
					to_char(to_date(#{startDate}, 'yyyymmdd') + #{schAdd}, 'yyyy-mm-dd') as sel_day
				</when>
				<otherwise>
					to_char(sysdate + #{schAdd}, 'yyyy-mm-dd') as sel_day
				</otherwise>
			</choose>
		</if>
		from dual
	</select>

	<!-- 과거인지 현재인지 미래인지 체크 -->
	<select id="selectNowDateCheck" resultType="int">
		/* common.selectNowDateCheck */
		select sign(to_date(#{schDate}, 'yyyymmdd') - trunc(sysdate)) as date_check
		from dual
	</select>

	<insert id="insertLog">
		/* common.insertLog */
		insert into shfda.tb_log
		( log_date
		, log_seq
		, log_div_cd
		, succ_text
		, log_cont
		, create_dt
		, creater)
		values ( to_char(sysdate, 'yyyymmdd')
			   , (select nvl(max(log_seq), 0) + 1 from shfda.tb_LOG where log_date = to_char(sysdate, 'yyyymmdd'))
			   , #{logDivCd}
			   , #{succText}
			   , #{logCont}
			   , sysdate
			   , #{sessionMemberUid})
	</insert>

	<!-- 공통 로그 목록 조회 -->
	<select id="selectLogList" resultType="CMap">
		/* common.selectLogList */
		select t.*
		from
		(
		select
		a.log_date
		, a.log_seq
		, a.log_div_cd
		, c.cd_nm as log_div_nm
		, a.succ_text
		, a.log_cont
		, to_char(a.create_dt, 'YYYY-MM-DD HH24:MI:SS') as create_dt
		, a.creater
		, b.name
		, count(1) over() as tot_count
		, row_number() over(order by a.log_date desc, a.log_seq desc) as rnum
		from shfda.tb_log a
		left join shfda.tb_member_info b on (a.creater = b.member_uid)
		inner join shfda.tb_cd c on (a.log_div_cd = c.cd and c.cd_group = 'LOG_DIV_CD')
		where 1 = 1
		<if test="departCd != null">
			and b.depart_cd = #{departCd}
		</if>
		<if test="schText != null and schText != ''.toString()">
			<choose>
				<when test="schType != null and schType == 'USER'.toString()">
					and (instr(b.name, #{schText}, 1, 1) > 0 or b.coc_id = #{schText})
				</when>
				<when test="schType != null and schType == 'CONT'.toString()">
					and instr(a.log_cont, #{schText}, 1, 1) > 0
				</when>
			</choose>
		</if>
		<if test="schLogDivCd != null and schLogDivCd != ''.toString()">
			and a.log_div_cd = #{schLogDivCd}
		</if>
		) t
		where rnum between ((#{nowPage})*1 - 1) * (#{pageListCount}*1) + 1 and ((#{nowPage})*1) * (#{pageListCount}*1)
	</select>


	<insert id="insertTest">
		/* common.insertTest */
		insert into shfda.tb_NOTICE
		( NOTICE_NUM
		, SITE_ID
		, NOTICE_DIV_CD
		, TITLE
		, CONT
		, MEMBER_UID
		, REG_DT
		, DEL_YN
		, CREATE_DT
		, CREATER
		, UPDATE_DT
		, UPDATER)
		values ( '1'
			   , '1'
			   , ''
			   , ''
			   , ''
			   , ''
			   , sysdate
			   , 'N'
			   , sysdate
			   , ''
			   , null
			   , '')
	</insert>

	<!-- 업로드 파일 등록 -->
	<insert id="insertChatAttFile">
		/* common.insertChatAttFile */
		<selectKey keyProperty="fileNum" resultType="String" order="BEFORE">
			select shfda.seq_file_num.nextval from dual
		</selectKey>
		insert into shfda.tb_chat_att_file (
		file_num,
		chat_num,
		file_url,
		file_nm,
		file_type,
		create_dt
		) values (
		#{fileNum},
		#{chatNum},
		#{fileUrl},
		#{fileNm},
		#{fileType},
		SYSDATE
		)
	</insert>

	<!-- 배치 시작 여부 판단 -->
	<select id="checkBatchStart" resultType="String">
		/* common.checkBatchStart */
		select job_id
		from shfda.tb_batch_job
		where job_id = #{jobId}
		<choose>
			<when test="flag != null and flag == 'DAY'.toString()">
				and (start_date != to_char(sysdate, 'yyyymmdd') or start_date is NULL)
			</when>
			<otherwise>
				and (start_yn = 'N' or start_yn is NULL)
			</otherwise>
		</choose>
		for update wait 1
	</select>

	<!-- 배치 시작 update -->
	<update id="updateBatchStart">
		/* common.updateBatchStart */
		update shfda.tb_batch_job
		set start_yn   = #{startYn}
		  , start_date = to_char(sysdate, 'yyyymmdd')
		where job_id = #{jobId}
	</update>


</mapper>
