<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="BotScenario">

	<select id="select" resultType="BotScenario">
		/* BotScenario.select */
		select *
		from shfda.tb_bot_scenario
		<where>
			<if test="id != null">
			and id = #{id}
			</if>
			<if test="code != null">
			and code = #{code}
			</if>
			<if test="description != null">
			and description = #{description}
			</if>
			<if test="fallbackBlockId != null">
			and fallback_block_id = #{fallbackBlockId}
			</if>
			<if test="firstBlockId != null">
			and first_block_id = #{firstBlockId}
			</if>
			<if test="name != null">
			and name = #{name}
			</if>
			<if test="useFirst != null">
			and use_first = #{useFirst}
			</if>
			<if test="usePrev != null">
			and use_prev = #{usePrev}
			</if>
			<if test="useYn != null">
			and use_yn = #{useYn}
			</if>																					
		</where>

		<if test="orderby != null">
		order by ${orderby}
		</if>
	</select>

	<sql id="seq">
		select shfda.seq_bot_scenario.nextval from dual
	</sql>

	<update id="save">
		/* BotScenario.save */
		merge into shfda.tb_bot_scenario
		using dual
		on (id = #{id})

		when not matched then
		insert
		(
		    id,
		    code,
		    description,
		    fallback_block_id,
		    first_block_id,
		    modified,
		    modifier,
		    name,
		    sort,
		    use_first,
		    use_prev,
		    use_yn
		)
		values
		(
			shfda.seq_bot_scenario.nextval
			, #{code}
			, #{description}
			, #{fallbackBlockId}
			, #{firstBlockId}			
			, sysdate
			, 1
			, #{name}
			, #{sort}
			, #{useFirst}
			, #{usePrev}
			, #{useYn}			
		)

		when matched then
		update
		set
		    code = #{code},
		    description = #{description},
		    fallback_block_id = #{fallbackBlockId},
		    first_block_id = #{firstBlockId},
		    modified = sysdate,	
		    modifier = 1,
		    name = #{name},
		    sort = #{sort},
		    use_first = #{useFirst},
		    use_prev = #{useFirst},
		    use_yn = #{useYn}
		where
			id = #{id}
	</update>

	<update id="delete">
		/* BotScenario.delete */
		delete from shfda.tb_bot_scenario
		where
			<if test="id != null">
			id = #{id}
			</if>
	</update>
</mapper>
